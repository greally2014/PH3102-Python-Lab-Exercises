{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter a launch angle in degrees: 78\n",
      "Enter the velocity of the ball at launch: 9\n",
      "No\n"
     ]
    }
   ],
   "source": [
    "import math                                                     #allows use of cos and sin functions\n",
    "\n",
    "g=9.81                                                          #states gravity\n",
    "\n",
    "while True:                                                     #repeats asking for an angle until a valid one is given\n",
    "    angle=float(input(\"Enter a launch angle in degrees: \"))     #i'm only accepting foward motion, so between 0 and 90 degrees\n",
    "    if 0<angle<90:                                            \n",
    "        break                                                   #a valid angle breaks the loop\n",
    "    else:\n",
    "        print(\"Please input an angle between 0 and 90 degrees\")     #this will be printed to prompt for a valid answer\n",
    "        \n",
    "while True:\n",
    "    vel=float(input(\"Enter the velocity of the ball at launch: \"))  #repeats asking for a speed until a positive answer is given\n",
    "    if vel>0:                                                       #this is because we are only accepting foward motion\n",
    "        break                                                       #i hope you don't mind me adding these parameters\n",
    "    else:                                                           #just wanted to spice it up a bit\n",
    "        print(\"Please input a valid speed: \")\n",
    "\n",
    "angle=(angle/180)*math.pi                               #converts the angle to radians\n",
    "time=(6.4)/(vel*math.cos(angle))                        #calculates time\n",
    "disty=(vel*math.sin(angle)*time)-((1/2)*g*(time**2))    #if ball is launched off the ground the radius does not matter\n",
    "\n",
    "if disty > 0.91:\n",
    "    print(\"The ball will make it over the net.\")\n",
    "else:\n",
    "    print(\"The ball will not make it over the net.\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
